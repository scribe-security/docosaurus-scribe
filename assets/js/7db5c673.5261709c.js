"use strict";(self.webpackChunkscribe=self.webpackChunkscribe||[]).push([[276],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return b}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=m(n),b=a,d=u["".concat(l,".").concat(b)]||u[b]||c[b]||o;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9109:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return m},assets:function(){return s},toc:function(){return c},default:function(){return b}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],p={sidebar_position:3},l="How to generate an SBOM",m={unversionedId:"gensbomcli",id:"gensbomcli",title:"How to generate an SBOM",description:"Scribe's gensbom CLI tool generates an SBOM for docker images and OCI images. You can call gensbom from your CI pipeline after the build stage, or run it from a bash shell and point it to an image in your registry.",source:"@site/docs/gensbomcli.md",sourceDirName:".",slug:"/gensbomcli",permalink:"/docosaurus-scribe/docs/gensbomcli",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docosaurus-scribe/docs/intro"},next:{title:"GitHub Actions",permalink:"/docosaurus-scribe/docs/ci-cd-integration/github-actions"}},s={},c=[{value:"Examples",id:"examples",level:2},{value:"Target (image) locations:",id:"target-image-locations",level:3},{value:"Output SBOM locations",id:"output-sbom-locations",level:3}],u={toc:c};function b(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-generate-an-sbom"},"How to generate an SBOM"),(0,o.kt)("p",null,"Scribe's ",(0,o.kt)("em",{parentName:"p"},"gensbom")," CLI tool generates an SBOM for docker images and OCI images. You can call ",(0,o.kt)("em",{parentName:"p"},"gensbom")," from your CI pipeline after the build stage, or run it from a bash shell and point it to an image in your registry.  "),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"gensbom")," runs on Mac or Linux. To access docker images in public registries, have dockerd installed on your machine."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Get Scribe ",(0,o.kt)("em",{parentName:"p"},"gensbom")," CLI tool",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"curl https://www.scribesecurity.com/getscribe | sh"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Generate an ",(0,o.kt)("em",{parentName:"p"},"SBOM"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom <target>"),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"<target>")," is the docker image: ",(0,o.kt)("em",{parentName:"p"},"name:tag, file path, or registry URL"),(0,o.kt)("br",{parentName:"p"}),"\n","This creates a default SBOM in a CycloneDX JSON format. For example:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom alpine:latest"),(0,o.kt)("br",{parentName:"p"}),"\n","creates the SBOM of image ",(0,o.kt)("em",{parentName:"p"},"alpine:latest")," from Dockerhub. The SBOM is found by default under ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/scribe/registry/alpine/latest"),"  "))),(0,o.kt)("br",null),(0,o.kt)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","By default, the SBOM file name is the hash of the image. You change the output file path and name as follows:",(0,o.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom <target> [--output-file /path/file_name.json]"),"  "),(0,o.kt)("br",null),(0,o.kt)("p",null,"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","You can also change the output directory as follows:",(0,o.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom <target> [--output-directory /file_path]"),(0,o.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","SBOMs path format is as follows: ",(0,o.kt)("inlineCode",{parentName:"p"},"{target source}/{image name}/{image tag}"),"\nFor example:",(0,o.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/scribe/registry/alpine/latest")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"target-image-locations"},"Target (image) locations:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom yourrepo/yourimage:tag"),(0,o.kt)("br",{parentName:"p"}),"\n","By default the image is retrieved by dockerd on dockerhub.  "),(0,o.kt)("p",null,"Explicitly use the ",(0,o.kt)("em",{parentName:"p"},"Docker")," daemon:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom docker:yourrepo/yourimage:tag "),"  "),(0,o.kt)("p",null,'Use a local traball created by "docker save":',(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom docker-archive:path/to/yourimage.tar "),"  "),(0,o.kt)("p",null,"Use a tarball from your local disk for ",(0,o.kt)("em",{parentName:"p"},"OCI archives")," (for example, Skopeo):",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom oci-archive:path/to/yourimage.tar "),"  "),(0,o.kt)("p",null,"Read the image directly from a path on your local disk (any directory):",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom dir:path/to/yourproject"),"  "),(0,o.kt)("p",null,"Pull image directly from a registry:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom registry:yourrepo/yourimage:tag"),"  "),(0,o.kt)("p",null,"Read directly from a path on disk (any single file):",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom file:path/to/yourproject/file ")),(0,o.kt)("h3",{id:"output-sbom-locations"},"Output SBOM locations"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom alpine:latest --output-file /your_sboms/sample-sbom.json  "),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"gensbom bom alpine:latest --output-directory /your_sboms")))}b.isMDXComponent=!0}}]);